name: build-windows

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'
        type: string
      commit:
        description: 'Shortform commit hash to build'
        required: true
        default: 'HEAD'
        type: string
  workflow_call:
    inputs:
      branch:
        description: 'Branch to build'
        required: true
        default: 'main'
        type: string
      commit:
        description: 'Shortform commit hash to build'
        required: true
        default: 'HEAD'
        type: string
    outputs:
      artifact_name:
        description: 'Name of the artifact to upload'
        value: 'Windows-x86-64'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Checkout specific commit (if provided)
        if: ${{ github.event.inputs.commit != 'HEAD' }}
        run: |
          git fetch --depth=1 origin ${{ github.event.inputs.commit }}
          git checkout ${{ github.event.inputs.commit }}

      - name: Set up environment variables
        run: |
          echo "VCPKG_DEFAULT_BINARY_CACHE=C:/vcpkg_cache" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Cache vcpkg dependencies
        uses: actions/cache@v4
        with:
          path: C:/vcpkg_cache
          key: vcpkg-${{ runner.os }}-${{ hashFiles('vcpkg.json') }}
          restore-keys: |
            vcpkg-${{ runner.os }}-

      - name: Upgrade LLVM
        run: |
            choco uninstall llvm -y
            choco install llvm -y
            echo "C:\Program Files\LLVM\bin" | Out-File -Append -Encoding utf8 $env:GITHUB_PATH
      
      - name: Checkout pinned version of vcpkg
        run: |
          cd C:/vcpkg
          git reset --hard
          git fetch
          git checkout e113942454e6b829366af7bcf196bbdbccbd6b3c
          ./bootstrap-vcpkg.bat -disableMetrics

      - name: Install dependencies with vcpkg
        run: |
          mkdir C:\vcpkg_cache -ErrorAction SilentlyContinue
          cd $env:GITHUB_WORKSPACE
          echo "VCPKG_FEATURE_FLAGS=manifests" | Out-File -FilePath $env:GITHUB_ENV -Append
          C:/vcpkg/vcpkg.exe install --recurse

      - name: Configure CMake
        run: |
            cmake -B build -S . `
                -G "Visual Studio 17 2022" `
                -T ClangCL `
                -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" `
                -DCMAKE_C_COMPILER=clang `
                -DCMAKE_CXX_COMPILER=clang++ `
                -DCMAKE_CXX_FLAGS="/utf-8 /EHsc" `
                -DCMAKE_BUILD_TYPE=Release `
                -DBUILD_FRONTEND=ON `
                -DBUILD_TESTS=ON

      - name: Build Project
        run: |
          cmake --build build --config Release

      - name: Upload build directory
        uses: actions/upload-artifact@v4
        with:
          name: Windows-x86-64
          path: build/Release

name: build-test-release

# This should only be manually triggered for now, as new releases
# should be infrequent while we are still developing core features.
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    # Allow the workflow dispatcher to specify whether major, minor, or patch
    # should be incremented.
    inputs:
        version_bump:
            description: 'The type of version bump to perform.'
            required: true
            default: 'patch'
            type: choice
            options:
                - 'major'
                - 'minor'
                - 'patch'

jobs:
  test:
    uses: coopeaus/NES-Emulator/.github/workflows/lint-format-test.yml@main
    with:
      branch: ${{ github.event_name == 'pull_request' && github.head_ref || 'main' }}
      commit: HEAD

  build-linux:
    uses: coopeaus/NES-Emulator/.github/workflows/build-linux.yml@main
    with:
      branch: ${{ github.head_ref || 'main' }}
      commit: HEAD

  build-windows:
    uses: coopeaus/NES-Emulator/.github/workflows/build-windows.yml@main
    with:
      branch: ${{ github.head_ref || 'main' }}
      commit: HEAD

  build-macos:
    uses: coopeaus/NES-Emulator/.github/workflows/build-mac-arm.yml@main
    with:
      branch: ${{ github.head_ref || 'main' }}
      commit: HEAD

  release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get bump type
        id: bump_type
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.version_bump }}" != "" ]]; then
            echo "BUMP_TYPE=${{ github.event.inputs.version_bump }}" >> $GITHUB_ENV
          else
            echo "BUMP_TYPE=patch" >> $GITHUB_ENV
          fi

      # Uses a handy marketplace action for bumping the version number
      # using semantic versioning.
      - name: auto-inc version
        id: new_version
        uses: anothrNick/github-tag-action@1.71.0
        env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            DEFAULT_BUMP: ${{ github.event.inputs.version_bump || 'patch' }}
            WITH_V: true

      - name: Get Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: Windows-x86-64
          path: release/Windows
      
      - name: Get Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: Linux-x86-64
          path: release/Linux

      - name: Get MacOS artifact
        uses: actions/download-artifact@v4
        with:
          name: macOS-arm64
          path: release/MacOS

      - name: Package Windows Build
        run: |
          cd release/Windows
          zip -r ../../Windows-x64-${{ steps.new_version.outputs.new_tag }}.zip .
          cd ../..
  
      - name: Package Linux Build
        run: |
          cd release/Linux
          tar -czvf ../../Linux-x64-${{ steps.new_version.outputs.new_tag }}.tar.gz .
          cd ../..
  
      - name: Package macOS Build
        run: |
          cd release/MacOS
          zip -r ../../MacOS-arm64-${{ steps.new_version.outputs.new_tag }}.zip .
          cd ../..
  
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.new_version.outputs.new_tag }}
          files: |
            Windows-x64-${{ steps.new_version.outputs.new_tag }}.zip
            Linux-x64-${{ steps.new_version.outputs.new_tag }}.tar.gz
            MacOS-arm64-${{ steps.new_version.outputs.new_tag }}.zip
          body: "Release ${{ steps.new_version.outputs.new_tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
